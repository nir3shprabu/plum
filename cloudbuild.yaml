steps:

  # Docker Build and Tag to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_GCR_HOSTNAME/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA', '.']
    #   - build
    #   - '--no-cache'
    #   - '-t'
    #   - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_IMAGE_NAME:$SHORT_SHA'
    #   - .
    #   - '-f'    
    #   - Dockerfile
    # id: Docker Build

  # Docker Push to GCR
  - name: gcr.io/cloud-builders/docker
    args: ['push', '$_GCR_HOSTNAME/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA']
    # - '-c'
    # - |
    #   - push
    #   - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_IMAGE_NAME:$SHORT_SHA'
    # id: Docker Push

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      gcloud secrets versions access latest --secret=PLUM_DB_TYPE > /workspace/db_type.txt
      gcloud secrets versions access latest --secret=PLUM_DB_NAME > /workspace/db_name.txt
      gcloud secrets versions access latest --secret=PLUM_DB_USER > /workspace/db_user.txt
      gcloud secrets versions access latest --secret=PLUM_DB_PASS > /workspace/db_pass.txt
      gcloud secrets versions access latest --secret=PLUM_DB_HOST > /workspace/db_host.txt
      gcloud secrets versions access latest --secret=PLUM_DB_PORT > /workspace/db_port.txt
      gcloud secrets versions access latest --secret=PLUM_MAIL_FROM > /workspace/mail_from.txt
      gcloud secrets versions access latest --secret=PLUM_MAIL_HOST > /workspace/mail_host.txt
      gcloud secrets versions access latest --secret=PLUM_MAIL_PORT > /workspace/mail_port.txt
      gcloud secrets versions access latest --secret=PLUM_MAIL_USER > /workspace/mail_user.txt
      gcloud secrets versions access latest --secret=PLUM_MAIL_PASSWORD > /workspace/mail_pass.txt
  
    # Deploy to Cloud Run using the secrets
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'gcloud'
    args:
    - 'run'
    - 'deploy'
    - 'plum-service'  # Replace with the desired Cloud Run service name
    - '--image'
    - '$_GCR_HOSTNAME/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA' 
    - '--region'
    - 'us-central1'  # Replace with your desired region
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'  # Optional: remove if you want to require authentication
    - '--port'
    - '80'
    - '--args'
    - 'web'
    - '--role'
    - 'roles/secretmanager.secretAccessor'
    - '--add-cloudsql-instances'
    - 'my-kubernetes-project-393103:us-central1:plum-instance'  # Replace with your Cloud SQL instance details
    - '--set-env-vars=PLUM_DB_TYPE=$(cat /workspace/db_type.txt),PLUM_DB_NAME=$(cat /workspace/db_name.txt),PLUM_DB_USER=$(cat /workspace/db_user.txt),PLUM_DB_PASS=$(cat /workspace/db_pass.txt),PLUM_DB_HOST=$(cat /workspace/db_host.txt),PLUM_DB_PORT=$(cat /workspace/db_port.txt)'

images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA'

substitutions:
  _GCR_HOSTNAME: gcr.io
  _IMAGE_NAME: plum 
  _SHORT_SHA: $SHORT_SHA  
